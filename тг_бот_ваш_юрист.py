import telebot
import time
import random
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import threading
from tinydb import TinyDB, Query
TOKEN = "7647362919:AAFnN_KNj8S5Du-cAVUzPM9XGT_SYLtxcxQ"# –°—é–¥–∞ –∑–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(TOKEN)
ADMIN_TELEGRAM_ID = 2027072686 #–°—é–¥–∞ –∑–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π ID
tasks = {}
db = TinyDB('review.json')
Consultations = db.table('Consultations')
Review = Query()

# --------------------- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ---------------------
def save_consultation(user_id, name, history):
    Consultations.insert({
        'user_id': user_id,
        'name': name,
        'history': history,
    })
    return True  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º True, –µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ


def main_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    keyboard.add(KeyboardButton("–ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"))
    keyboard.add(KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"), KeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã"))  # –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞
    return keyboard


@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.chat.id
    tasks[user_id] = tasks.get(user_id, [])
    bot.send_message(user_id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è –ø–æ–º–æ—â–Ω–∏–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –í–ê–® –Æ–†–ò–°–¢(–¢–µ—Ä–µ–±–µ–Ω–∏–Ω –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—ã).",
                     reply_markup=main_menu())

#  –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–ø–∏—Å–∏
user_data = {}


# --------------------- 1. –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é ---------------------
@bot.message_handler(func=lambda message: message.text == "–ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é")
def start_consultation(message):
    user_id = message.chat.id
    user_data[user_id] = {}  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    bot.register_next_step_handler(message, get_name)

def get_name(message):
    user_id = message.chat.id
    user_data[user_id]['name'] = message.text
    bot.send_message(user_id, "–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫—É—é –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏:")
    bot.register_next_step_handler(message, get_history)

def get_history(message):
    user_id = message.chat.id
    user_data[user_id]['history'] = message.text
    name = user_data[user_id]['name']
    history = user_data[user_id]['history']

    try:
        chat = bot.get_chat(user_id)
        if chat.username:
            user_link = f"//t.me/{chat.username}"
        else:
            user_link = f"tg://user?id={user_id}"
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}")
        user_link = f"tg://user?id={user_id}" # Fallback, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é


    Consultations = f"""
    –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:
    \n–ò–º—è: {name}
    \n–ò—Å—Ç–æ—Ä–∏—è: {history}
    \n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_link}
    """

    if save_consultation(user_id, name, history):
        bot.send_message(ADMIN_TELEGRAM_ID, Consultations)
        bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø—Ä–∏–Ω—è—Ç–∞. –í–∞–º —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç—è—Ç.",
                         reply_markup=main_menu())
    else:
        bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu())

    del user_data[user_id]  # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


#-----------------------—Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤
@bot.message_handler(func=lambda message: message.text == "clean")
def ask_for_review(message):
  with open("review.json", "w") as file:
      file.truncate()
  bot.send_message(message.chat.id, "Clean success", reply_markup=main_menu())

@bot.message_handler(func=lambda message: message.text == "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
def ask_for_review(message):
    bot.send_message(message.chat.id, "–í –æ—Ç–∑—ã–≤–µ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
    bot.register_next_step_handler(message, save_review)


def save_review(message):
    review_text = message.text
    db.insert({'user_id': message.chat.id, 'review': review_text})
    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!", reply_markup=main_menu())



# –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤
@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã")
def view_reviews(message):
    reviews = db.all()
    if reviews:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º Inline Keyboard –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–ø—Ä–∏–º–µ—Ä)
        show_reviews_page(message, 0)  # –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã

    else:
        bot.send_message(message.chat.id, "–ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞.", reply_markup=main_menu())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ
def show_reviews_page(message, page_num):
    reviews = db.all()
    reviews_per_page = 3  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    start_index = page_num * reviews_per_page
    end_index = start_index + reviews_per_page
    page_reviews = reviews[start_index:end_index]

    if not page_reviews:
        bot.send_message(message.chat.id, "–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∑—ã–≤–æ–≤.", reply_markup=main_menu())
        return

    text = "–û—Ç–∑—ã–≤—ã:\n\n"
    for i, review in enumerate(page_reviews):
        text += f"{start_index + i + 1}. {review['review']}\n"

    # –°–æ–∑–¥–∞–µ–º Inline –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard = InlineKeyboardMarkup()
    if page_num > 0:
        keyboard.add(InlineKeyboardButton("‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è", callback_data=f'prev_{page_num - 1}'))
    if end_index < len(reviews):
        keyboard.add(InlineKeyboardButton("‚û°Ô∏è –°–ª–µ–¥—É—é—â–∞—è", callback_data=f'next_{page_num + 1}'))
    keyboard.add(InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data="close")) # –î–æ–±–∞–≤–∏–ª –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä—ã—Ç—å"

    bot.send_message(message.chat.id, text, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Inline –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data.startswith('next_'):
        page_num = int(call.data[5:])
        show_reviews_page(call.message, page_num)
    elif call.data.startswith('prev_'):
        page_num = int(call.data[5:])
        show_reviews_page(call.message, page_num)
    elif call.data == "close":
        bot.delete_message(call.message.chat.id, call.message.message_id) # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–∑—ã–≤–∞–º–∏

# --------------------- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ–≥–æ –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ ---------------------
@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.", reply_markup=main_menu())

while True:
    try:
        print("üü¢ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        bot.polling(none_stop=True, timeout=60)
    except Exception as e:
        print(f"üî¥ –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥...")
        time.sleep(15)

#–£—Å—Ç–æ–Ω–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫ –≤ googl collab
#!pip install telebot
#!pip install tinydb
#!pip install Query
#!pip install TinyDB
